//
//  PS3StyleKit.swift
//  PS4 Controller
//
//  Created by Mark Alldritt on 2020-06-19.
//  Copyright Â© 2020 Late Night Software Ltd.. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class PS3StyleKit : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawPs4Controller(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 576, height: 388), resizing: ResizingBehavior = .aspectFit, active: Bool = true, menuPressed: Bool = true, optionsPressed: Bool = true, leftSholderPressed: Bool = true, rightSholderPressed: Bool = true, xPressed: Bool = true, yPressed: Bool = false, aPressed: Bool = false, bPressed: Bool = false, upPressed: Bool = false, downPressed: Bool = false, leftPressed: Bool = false, rightPressed: Bool = false, j1Pressed: Bool = false, j1H: CGFloat = 0.5, j1V: CGFloat = 0.5, j2Pressed: Bool = false, j2H: CGFloat = 0.5, j2V: CGFloat = 0.5) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 576, height: 388), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 576, y: resizedFrame.height / 388)


        //// Color Declarations
        let pressedColor = UIColor(red: 0.320, green: 0.800, blue: 0.495, alpha: 1.000)
        let activeFillColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)
        var activeFillColorRedComponent: CGFloat = 1
        var activeFillColorGreenComponent: CGFloat = 1
        var activeFillColorBlueComponent: CGFloat = 1
        activeFillColor.getRed(&activeFillColorRedComponent, green: &activeFillColorGreenComponent, blue: &activeFillColorBlueComponent, alpha: nil)

        let buttonActiveFill = UIColor(red: (activeFillColorRedComponent * 0.8 + 0.2), green: (activeFillColorGreenComponent * 0.8 + 0.2), blue: (activeFillColorBlueComponent * 0.8 + 0.2), alpha: (activeFillColor.cgColor.alpha * 0.8 + 0.2))
        let inactiveFillColor = UIColor(red: 0.760, green: 0.760, blue: 0.760, alpha: 1.000)

        //// Variable Declarations
        let fillColor2 = active ? activeFillColor : inactiveFillColor
        let menuColor = menuPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let optionsColor = optionsPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let leftSholderColor = leftSholderPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let rightSholderColor = rightSholderPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let xColor = xPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let yColor = yPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let aColor = aPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let bColor = bPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let upColor = upPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let downColor = downPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let leftColor = leftPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let rightColor = rightPressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let j1Color = j1Pressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let j1HOffset: CGFloat = (j1H - 0.5) * 30
        let j1VOffset: CGFloat = (j1V - 0.5) * 30
        let j2Color = j2Pressed ? pressedColor : (active ? buttonActiveFill : inactiveFillColor)
        let j2HOffset: CGFloat = (j2H - 0.5) * 30
        let j2VOffset: CGFloat = (j2V - 0.5) * 30

        //// Group
        //// Group 2
        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(roundedRect: CGRect(x: 400.2, y: 50.85, width: 10.2, height: 23.9), cornerRadius: 5)
        menuColor.setFill()
        rectanglePath.fill()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalIn: CGRect(x: 449.42, y: 59.52, width: 34.16, height: 34.16))
        yColor.setFill()
        oval2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 287.18, y: 157.71))
        bezier3Path.addCurve(to: CGPoint(x: 255.58, y: 189.3), controlPoint1: CGPoint(x: 269.75, y: 157.71), controlPoint2: CGPoint(x: 255.58, y: 171.88))
        bezier3Path.addCurve(to: CGPoint(x: 287.18, y: 220.9), controlPoint1: CGPoint(x: 255.58, y: 206.73), controlPoint2: CGPoint(x: 269.75, y: 220.9))
        bezier3Path.addCurve(to: CGPoint(x: 318.77, y: 189.3), controlPoint1: CGPoint(x: 304.6, y: 220.9), controlPoint2: CGPoint(x: 318.77, y: 206.73))
        bezier3Path.addCurve(to: CGPoint(x: 287.18, y: 157.71), controlPoint1: CGPoint(x: 318.77, y: 171.88), controlPoint2: CGPoint(x: 304.6, y: 157.71))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 279.07, y: 201.18))
        bezier3Path.addCurve(to: CGPoint(x: 278.34, y: 201.77), controlPoint1: CGPoint(x: 279.06, y: 201.39), controlPoint2: CGPoint(x: 278.62, y: 201.72))
        bezier3Path.addCurve(to: CGPoint(x: 263.8, y: 200.25), controlPoint1: CGPoint(x: 273.36, y: 202.6), controlPoint2: CGPoint(x: 268.51, y: 202.07))
        bezier3Path.addCurve(to: CGPoint(x: 262.66, y: 199.6), controlPoint1: CGPoint(x: 263.4, y: 200.09), controlPoint2: CGPoint(x: 263.02, y: 199.85))
        bezier3Path.addCurve(to: CGPoint(x: 262.7, y: 195.47), controlPoint1: CGPoint(x: 260.87, y: 198.33), controlPoint2: CGPoint(x: 260.87, y: 196.65))
        bezier3Path.addCurve(to: CGPoint(x: 265.23, y: 194.17), controlPoint1: CGPoint(x: 263.5, y: 194.97), controlPoint2: CGPoint(x: 264.35, y: 194.49))
        bezier3Path.addCurve(to: CGPoint(x: 279.08, y: 189.16), controlPoint1: CGPoint(x: 269.75, y: 192.5), controlPoint2: CGPoint(x: 274.3, y: 190.88))
        bezier3Path.addCurve(to: CGPoint(x: 279.04, y: 193.93), controlPoint1: CGPoint(x: 279.08, y: 190.84), controlPoint2: CGPoint(x: 279.11, y: 192.39))
        bezier3Path.addCurve(to: CGPoint(x: 278.24, y: 194.52), controlPoint1: CGPoint(x: 279.04, y: 194.14), controlPoint2: CGPoint(x: 278.55, y: 194.4))
        bezier3Path.addCurve(to: CGPoint(x: 270.71, y: 197.24), controlPoint1: CGPoint(x: 275.73, y: 195.44), controlPoint2: CGPoint(x: 273.21, y: 196.31))
        bezier3Path.addCurve(to: CGPoint(x: 269.05, y: 198.1), controlPoint1: CGPoint(x: 270.13, y: 197.45), controlPoint2: CGPoint(x: 269.6, y: 197.81))
        bezier3Path.addCurve(to: CGPoint(x: 269.08, y: 198.52), controlPoint1: CGPoint(x: 269.06, y: 198.24), controlPoint2: CGPoint(x: 269.07, y: 198.38))
        bezier3Path.addCurve(to: CGPoint(x: 270.73, y: 199.06), controlPoint1: CGPoint(x: 269.63, y: 198.71), controlPoint2: CGPoint(x: 270.19, y: 199.1))
        bezier3Path.addCurve(to: CGPoint(x: 275.35, y: 198.44), controlPoint1: CGPoint(x: 272.28, y: 198.95), controlPoint2: CGPoint(x: 273.84, y: 198.77))
        bezier3Path.addCurve(to: CGPoint(x: 279.12, y: 197.12), controlPoint1: CGPoint(x: 276.58, y: 198.16), controlPoint2: CGPoint(x: 277.75, y: 197.62))
        bezier3Path.addCurve(to: CGPoint(x: 279.07, y: 201.18), controlPoint1: CGPoint(x: 279.11, y: 198.58), controlPoint2: CGPoint(x: 279.14, y: 199.88))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 289.26, y: 174.68))
        bezier3Path.addCurve(to: CGPoint(x: 289.13, y: 176.09), controlPoint1: CGPoint(x: 289.09, y: 175.1), controlPoint2: CGPoint(x: 289.13, y: 175.61))
        bezier3Path.addCurve(to: CGPoint(x: 289.13, y: 205.17), controlPoint1: CGPoint(x: 289.12, y: 185.78), controlPoint2: CGPoint(x: 289.13, y: 195.48))
        bezier3Path.addCurve(to: CGPoint(x: 289.13, y: 206.73), controlPoint1: CGPoint(x: 289.13, y: 205.63), controlPoint2: CGPoint(x: 289.13, y: 206.1))
        bezier3Path.addCurve(to: CGPoint(x: 281.01, y: 204.13), controlPoint1: CGPoint(x: 286.28, y: 205.83), controlPoint2: CGPoint(x: 283.65, y: 205))
        bezier3Path.addCurve(to: CGPoint(x: 280.56, y: 203.5), controlPoint1: CGPoint(x: 280.81, y: 204.07), controlPoint2: CGPoint(x: 280.62, y: 203.74))
        bezier3Path.addCurve(to: CGPoint(x: 280.52, y: 202.51), controlPoint1: CGPoint(x: 280.48, y: 203.19), controlPoint2: CGPoint(x: 280.52, y: 202.84))
        bezier3Path.addCurve(to: CGPoint(x: 280.56, y: 168.16), controlPoint1: CGPoint(x: 280.54, y: 191.06), controlPoint2: CGPoint(x: 280.55, y: 179.61))
        bezier3Path.addCurve(to: CGPoint(x: 280.56, y: 166.81), controlPoint1: CGPoint(x: 280.56, y: 167.76), controlPoint2: CGPoint(x: 280.56, y: 167.36))
        bezier3Path.addCurve(to: CGPoint(x: 282.67, y: 167.24), controlPoint1: CGPoint(x: 281.34, y: 166.96), controlPoint2: CGPoint(x: 282.02, y: 167.05))
        bezier3Path.addCurve(to: CGPoint(x: 293.8, y: 170.57), controlPoint1: CGPoint(x: 286.39, y: 168.33), controlPoint2: CGPoint(x: 290.1, y: 169.41))
        bezier3Path.addCurve(to: CGPoint(x: 296.57, y: 171.88), controlPoint1: CGPoint(x: 294.77, y: 170.87), controlPoint2: CGPoint(x: 295.68, y: 171.38))
        bezier3Path.addCurve(to: CGPoint(x: 301.59, y: 179.3), controlPoint1: CGPoint(x: 299.49, y: 173.5), controlPoint2: CGPoint(x: 301.17, y: 175.97))
        bezier3Path.addCurve(to: CGPoint(x: 301.24, y: 186.13), controlPoint1: CGPoint(x: 301.88, y: 181.6), controlPoint2: CGPoint(x: 301.98, y: 183.88))
        bezier3Path.addCurve(to: CGPoint(x: 292.79, y: 189.25), controlPoint1: CGPoint(x: 299.98, y: 189.94), controlPoint2: CGPoint(x: 296.48, y: 191.01))
        bezier3Path.addCurve(to: CGPoint(x: 292.31, y: 188.09), controlPoint1: CGPoint(x: 292.5, y: 189.12), controlPoint2: CGPoint(x: 292.32, y: 188.49))
        bezier3Path.addCurve(to: CGPoint(x: 292.27, y: 176.45), controlPoint1: CGPoint(x: 292.28, y: 184.21), controlPoint2: CGPoint(x: 292.32, y: 180.33))
        bezier3Path.addCurve(to: CGPoint(x: 291.66, y: 174.19), controlPoint1: CGPoint(x: 292.26, y: 175.69), controlPoint2: CGPoint(x: 292.04, y: 174.84))
        bezier3Path.addCurve(to: CGPoint(x: 290.19, y: 173.54), controlPoint1: CGPoint(x: 291.43, y: 173.79), controlPoint2: CGPoint(x: 290.66, y: 173.48))
        bezier3Path.addCurve(to: CGPoint(x: 289.26, y: 174.68), controlPoint1: CGPoint(x: 289.83, y: 173.58), controlPoint2: CGPoint(x: 289.45, y: 174.23))
        bezier3Path.close()
        bezier3Path.move(to: CGPoint(x: 311.5, y: 193.93))
        bezier3Path.addCurve(to: CGPoint(x: 311.58, y: 198.15), controlPoint1: CGPoint(x: 313.49, y: 195.25), controlPoint2: CGPoint(x: 313.58, y: 196.85))
        bezier3Path.addCurve(to: CGPoint(x: 307.53, y: 200.05), controlPoint1: CGPoint(x: 310.34, y: 198.95), controlPoint2: CGPoint(x: 308.93, y: 199.54))
        bezier3Path.addCurve(to: CGPoint(x: 291.44, y: 205.85), controlPoint1: CGPoint(x: 302.18, y: 202.02), controlPoint2: CGPoint(x: 296.81, y: 203.92))
        bezier3Path.addCurve(to: CGPoint(x: 290.54, y: 206.09), controlPoint1: CGPoint(x: 291.21, y: 205.93), controlPoint2: CGPoint(x: 290.96, y: 205.97))
        bezier3Path.addCurve(to: CGPoint(x: 290.58, y: 201.67), controlPoint1: CGPoint(x: 290.54, y: 204.51), controlPoint2: CGPoint(x: 290.5, y: 203.08))
        bezier3Path.addCurve(to: CGPoint(x: 291.39, y: 200.86), controlPoint1: CGPoint(x: 290.6, y: 201.37), controlPoint2: CGPoint(x: 291.05, y: 200.98))
        bezier3Path.addCurve(to: CGPoint(x: 303.05, y: 196.68), controlPoint1: CGPoint(x: 295.26, y: 199.44), controlPoint2: CGPoint(x: 299.16, y: 198.07))
        bezier3Path.addCurve(to: CGPoint(x: 304.57, y: 196.07), controlPoint1: CGPoint(x: 303.56, y: 196.49), controlPoint2: CGPoint(x: 304.09, y: 196.33))
        bezier3Path.addCurve(to: CGPoint(x: 305.28, y: 195.33), controlPoint1: CGPoint(x: 304.86, y: 195.91), controlPoint2: CGPoint(x: 305.05, y: 195.58))
        bezier3Path.addCurve(to: CGPoint(x: 304.47, y: 194.73), controlPoint1: CGPoint(x: 305.01, y: 195.12), controlPoint2: CGPoint(x: 304.77, y: 194.8))
        bezier3Path.addCurve(to: CGPoint(x: 299.4, y: 195.08), controlPoint1: CGPoint(x: 302.75, y: 194.29), controlPoint2: CGPoint(x: 301.05, y: 194.5))
        bezier3Path.addCurve(to: CGPoint(x: 291.85, y: 197.74), controlPoint1: CGPoint(x: 296.88, y: 195.95), controlPoint2: CGPoint(x: 294.37, y: 196.85))
        bezier3Path.addCurve(to: CGPoint(x: 290.55, y: 198.16), controlPoint1: CGPoint(x: 291.48, y: 197.87), controlPoint2: CGPoint(x: 291.11, y: 197.98))
        bezier3Path.addCurve(to: CGPoint(x: 290.58, y: 193.35), controlPoint1: CGPoint(x: 290.55, y: 196.46), controlPoint2: CGPoint(x: 290.53, y: 194.9))
        bezier3Path.addCurve(to: CGPoint(x: 291.23, y: 192.77), controlPoint1: CGPoint(x: 290.59, y: 193.15), controlPoint2: CGPoint(x: 290.97, y: 192.85))
        bezier3Path.addCurve(to: CGPoint(x: 310.73, y: 193.51), controlPoint1: CGPoint(x: 297.81, y: 190.69), controlPoint2: CGPoint(x: 304.33, y: 190.76))
        bezier3Path.addCurve(to: CGPoint(x: 311.5, y: 193.93), controlPoint1: CGPoint(x: 311, y: 193.61), controlPoint2: CGPoint(x: 311.25, y: 193.77))
        bezier3Path.close()
        fillColor2.setFill()
        bezier3Path.fill()


        //// Oval 3 Drawing
        let oval3Path = UIBezierPath(ovalIn: CGRect(x: 489.51, y: 99.61, width: 34.16, height: 34.16))
        bColor.setFill()
        oval3Path.fill()


        //// Oval 4 Drawing
        context.saveGState()
        context.translateBy(x: 163.6, y: 171.69)

        let oval4Path = UIBezierPath(ovalIn: CGRect(x: j1HOffset, y: j1VOffset, width: 54.6, height: 54.5))
        j1Color.setFill()
        oval4Path.fill()

        context.restoreGState()


        //// Oval 5 Drawing
        context.saveGState()
        context.translateBy(x: 351.2, y: 171.69)

        let oval5Path = UIBezierPath(ovalIn: CGRect(x: j2HOffset, y: j2VOffset, width: 54.6, height: 54.5))
        j2Color.setFill()
        oval5Path.fill()

        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 507.83, y: 38.63))
        bezier4Path.addCurve(to: CGPoint(x: 500.66, y: 33.55), controlPoint1: CGPoint(x: 506.54, y: 36.63), controlPoint2: CGPoint(x: 504.01, y: 34.95))
        bezier4Path.addLine(to: CGPoint(x: 500.66, y: 28.35))
        bezier4Path.addCurve(to: CGPoint(x: 431.44, y: 24.6), controlPoint1: CGPoint(x: 500.66, y: 28.35), controlPoint2: CGPoint(x: 470.91, y: 8.28))
        bezier4Path.addCurve(to: CGPoint(x: 429.71, y: 31.19), controlPoint1: CGPoint(x: 431.44, y: 24.6), controlPoint2: CGPoint(x: 430.19, y: 25.66))
        bezier4Path.addCurve(to: CGPoint(x: 423.31, y: 33.08), controlPoint1: CGPoint(x: 427.22, y: 31.74), controlPoint2: CGPoint(x: 425.07, y: 32.37))
        bezier4Path.addCurve(to: CGPoint(x: 410.75, y: 35.36), controlPoint1: CGPoint(x: 415.64, y: 36.18), controlPoint2: CGPoint(x: 410.75, y: 35.36))
        bezier4Path.addLine(to: CGPoint(x: 383.97, y: 35.36))
        bezier4Path.addCurve(to: CGPoint(x: 385.53, y: 42.17), controlPoint1: CGPoint(x: 384.95, y: 37.44), controlPoint2: CGPoint(x: 385.53, y: 39.73))
        bezier4Path.addLine(to: CGPoint(x: 385.53, y: 124.79))
        bezier4Path.addCurve(to: CGPoint(x: 369.42, y: 140.9), controlPoint1: CGPoint(x: 385.53, y: 133.67), controlPoint2: CGPoint(x: 378.31, y: 140.9))
        bezier4Path.addLine(to: CGPoint(x: 204.94, y: 140.9))
        bezier4Path.addCurve(to: CGPoint(x: 188.83, y: 124.79), controlPoint1: CGPoint(x: 196.05, y: 140.9), controlPoint2: CGPoint(x: 188.83, y: 133.67))
        bezier4Path.addLine(to: CGPoint(x: 188.83, y: 42.17))
        bezier4Path.addCurve(to: CGPoint(x: 190.39, y: 35.36), controlPoint1: CGPoint(x: 188.83, y: 39.73), controlPoint2: CGPoint(x: 189.41, y: 37.44))
        bezier4Path.addLine(to: CGPoint(x: 164.64, y: 35.36))
        bezier4Path.addCurve(to: CGPoint(x: 152.08, y: 33.08), controlPoint1: CGPoint(x: 164.64, y: 35.36), controlPoint2: CGPoint(x: 159.74, y: 36.18))
        bezier4Path.addCurve(to: CGPoint(x: 145.69, y: 31.19), controlPoint1: CGPoint(x: 150.32, y: 32.37), controlPoint2: CGPoint(x: 148.16, y: 31.74))
        bezier4Path.addCurve(to: CGPoint(x: 143.94, y: 24.6), controlPoint1: CGPoint(x: 145.2, y: 25.66), controlPoint2: CGPoint(x: 143.94, y: 24.6))
        bezier4Path.addCurve(to: CGPoint(x: 74.73, y: 28.35), controlPoint1: CGPoint(x: 104.48, y: 8.28), controlPoint2: CGPoint(x: 74.73, y: 28.35))
        bezier4Path.addLine(to: CGPoint(x: 74.73, y: 33.55))
        bezier4Path.addCurve(to: CGPoint(x: 67.55, y: 38.63), controlPoint1: CGPoint(x: 71.38, y: 34.95), controlPoint2: CGPoint(x: 68.86, y: 36.63))
        bezier4Path.addCurve(to: CGPoint(x: 35.57, y: 101.29), controlPoint1: CGPoint(x: 67.55, y: 38.63), controlPoint2: CGPoint(x: 42.75, y: 75.83))
        bezier4Path.addCurve(to: CGPoint(x: 0.98, y: 324.51), controlPoint1: CGPoint(x: 28.39, y: 126.74), controlPoint2: CGPoint(x: -6.21, y: 269.68))
        bezier4Path.addCurve(to: CGPoint(x: 112.59, y: 349.96), controlPoint1: CGPoint(x: 8.15, y: 379.34), controlPoint2: CGPoint(x: 91.05, y: 393.04))
        bezier4Path.addCurve(to: CGPoint(x: 148.49, y: 254.67), controlPoint1: CGPoint(x: 134.12, y: 306.88), controlPoint2: CGPoint(x: 148.49, y: 254.67))
        bezier4Path.addCurve(to: CGPoint(x: 158.93, y: 248.47), controlPoint1: CGPoint(x: 148.49, y: 254.67), controlPoint2: CGPoint(x: 156.97, y: 248.47))
        bezier4Path.addCurve(to: CGPoint(x: 234.97, y: 245.85), controlPoint1: CGPoint(x: 158.93, y: 248.47), controlPoint2: CGPoint(x: 195.48, y: 278.82))
        bezier4Path.addLine(to: CGPoint(x: 340.42, y: 245.85))
        bezier4Path.addCurve(to: CGPoint(x: 416.46, y: 248.47), controlPoint1: CGPoint(x: 379.91, y: 278.82), controlPoint2: CGPoint(x: 416.46, y: 248.47))
        bezier4Path.addCurve(to: CGPoint(x: 426.91, y: 254.67), controlPoint1: CGPoint(x: 418.42, y: 248.47), controlPoint2: CGPoint(x: 426.91, y: 254.67))
        bezier4Path.addCurve(to: CGPoint(x: 462.81, y: 349.96), controlPoint1: CGPoint(x: 426.91, y: 254.67), controlPoint2: CGPoint(x: 441.27, y: 306.88))
        bezier4Path.addCurve(to: CGPoint(x: 574.42, y: 324.51), controlPoint1: CGPoint(x: 484.35, y: 393.04), controlPoint2: CGPoint(x: 567.24, y: 379.33))
        bezier4Path.addCurve(to: CGPoint(x: 539.83, y: 101.29), controlPoint1: CGPoint(x: 581.6, y: 269.68), controlPoint2: CGPoint(x: 547.01, y: 126.74))
        bezier4Path.addCurve(to: CGPoint(x: 507.83, y: 38.63), controlPoint1: CGPoint(x: 532.64, y: 75.83), controlPoint2: CGPoint(x: 507.83, y: 38.63))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 157.82, y: 55.93))
        bezier4Path.addCurve(to: CGPoint(x: 169.04, y: 44.71), controlPoint1: CGPoint(x: 157.82, y: 49.74), controlPoint2: CGPoint(x: 162.85, y: 44.71))
        bezier4Path.addCurve(to: CGPoint(x: 180.26, y: 55.93), controlPoint1: CGPoint(x: 175.23, y: 44.71), controlPoint2: CGPoint(x: 180.26, y: 49.74))
        bezier4Path.addLine(to: CGPoint(x: 180.26, y: 69.63))
        bezier4Path.addCurve(to: CGPoint(x: 169.04, y: 80.85), controlPoint1: CGPoint(x: 180.26, y: 75.82), controlPoint2: CGPoint(x: 175.23, y: 80.85))
        bezier4Path.addCurve(to: CGPoint(x: 157.82, y: 69.63), controlPoint1: CGPoint(x: 162.85, y: 80.85), controlPoint2: CGPoint(x: 157.82, y: 75.82))
        bezier4Path.addLine(to: CGPoint(x: 157.82, y: 55.93))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 87.98, y: 78.56))
        bezier4Path.addCurve(to: CGPoint(x: 106.66, y: 69.19), controlPoint1: CGPoint(x: 88.66, y: 69.2), controlPoint2: CGPoint(x: 101.28, y: 69.19))
        bezier4Path.addCurve(to: CGPoint(x: 125.38, y: 78.56), controlPoint1: CGPoint(x: 112.09, y: 69.19), controlPoint2: CGPoint(x: 124.72, y: 69.2))
        bezier4Path.addCurve(to: CGPoint(x: 122.13, y: 102.01), controlPoint1: CGPoint(x: 125.7, y: 82.97), controlPoint2: CGPoint(x: 124.19, y: 97.89))
        bezier4Path.addCurve(to: CGPoint(x: 108.68, y: 114.05), controlPoint1: CGPoint(x: 120.35, y: 105.56), controlPoint2: CGPoint(x: 111.65, y: 111.95))
        bezier4Path.addCurve(to: CGPoint(x: 108.15, y: 114.42), controlPoint1: CGPoint(x: 108.52, y: 114.19), controlPoint2: CGPoint(x: 108.34, y: 114.32))
        bezier4Path.addCurve(to: CGPoint(x: 106.69, y: 114.79), controlPoint1: CGPoint(x: 107.7, y: 114.66), controlPoint2: CGPoint(x: 107.19, y: 114.79))
        bezier4Path.addCurve(to: CGPoint(x: 106.45, y: 114.78), controlPoint1: CGPoint(x: 106.61, y: 114.79), controlPoint2: CGPoint(x: 106.53, y: 114.79))
        bezier4Path.addCurve(to: CGPoint(x: 105.07, y: 114.33), controlPoint1: CGPoint(x: 105.97, y: 114.74), controlPoint2: CGPoint(x: 105.5, y: 114.6))
        bezier4Path.addCurve(to: CGPoint(x: 104.68, y: 114.05), controlPoint1: CGPoint(x: 104.94, y: 114.25), controlPoint2: CGPoint(x: 104.8, y: 114.16))
        bezier4Path.addCurve(to: CGPoint(x: 91.25, y: 102.01), controlPoint1: CGPoint(x: 101.72, y: 111.94), controlPoint2: CGPoint(x: 93.03, y: 105.58))
        bezier4Path.addCurve(to: CGPoint(x: 87.98, y: 78.56), controlPoint1: CGPoint(x: 89.2, y: 97.9), controlPoint2: CGPoint(x: 87.68, y: 82.98))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 66.55, y: 137.39))
        bezier4Path.addCurve(to: CGPoint(x: 57.18, y: 118.72), controlPoint1: CGPoint(x: 57.19, y: 136.72), controlPoint2: CGPoint(x: 57.18, y: 124.1))
        bezier4Path.addCurve(to: CGPoint(x: 66.55, y: 99.99), controlPoint1: CGPoint(x: 57.18, y: 113.28), controlPoint2: CGPoint(x: 57.19, y: 100.66))
        bezier4Path.addCurve(to: CGPoint(x: 68.17, y: 99.95), controlPoint1: CGPoint(x: 67, y: 99.96), controlPoint2: CGPoint(x: 67.55, y: 99.95))
        bezier4Path.addCurve(to: CGPoint(x: 89.99, y: 103.24), controlPoint1: CGPoint(x: 73.38, y: 99.95), controlPoint2: CGPoint(x: 86.18, y: 101.34))
        bezier4Path.addCurve(to: CGPoint(x: 102.04, y: 116.7), controlPoint1: CGPoint(x: 93.55, y: 105.02), controlPoint2: CGPoint(x: 99.94, y: 113.73))
        bezier4Path.addCurve(to: CGPoint(x: 102.41, y: 117.22), controlPoint1: CGPoint(x: 102.18, y: 116.86), controlPoint2: CGPoint(x: 102.3, y: 117.03))
        bezier4Path.addCurve(to: CGPoint(x: 102.77, y: 118.92), controlPoint1: CGPoint(x: 102.69, y: 117.76), controlPoint2: CGPoint(x: 102.81, y: 118.35))
        bezier4Path.addCurve(to: CGPoint(x: 102.32, y: 120.31), controlPoint1: CGPoint(x: 102.73, y: 119.41), controlPoint2: CGPoint(x: 102.59, y: 119.88))
        bezier4Path.addCurve(to: CGPoint(x: 102.04, y: 120.69), controlPoint1: CGPoint(x: 102.24, y: 120.44), controlPoint2: CGPoint(x: 102.15, y: 120.58))
        bezier4Path.addCurve(to: CGPoint(x: 90, y: 134.13), controlPoint1: CGPoint(x: 99.93, y: 123.66), controlPoint2: CGPoint(x: 93.56, y: 132.35))
        bezier4Path.addCurve(to: CGPoint(x: 68.15, y: 137.43), controlPoint1: CGPoint(x: 86.18, y: 136.04), controlPoint2: CGPoint(x: 73.36, y: 137.43))
        bezier4Path.addCurve(to: CGPoint(x: 66.55, y: 137.39), controlPoint1: CGPoint(x: 67.54, y: 137.44), controlPoint2: CGPoint(x: 67, y: 137.42))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 125.38, y: 158.84))
        bezier4Path.addCurve(to: CGPoint(x: 106.71, y: 168.2), controlPoint1: CGPoint(x: 124.72, y: 168.19), controlPoint2: CGPoint(x: 112.1, y: 168.2))
        bezier4Path.addLine(to: CGPoint(x: 106.69, y: 168.2))
        bezier4Path.addCurve(to: CGPoint(x: 87.98, y: 158.84), controlPoint1: CGPoint(x: 101.27, y: 168.2), controlPoint2: CGPoint(x: 88.66, y: 168.19))
        bezier4Path.addCurve(to: CGPoint(x: 91.24, y: 135.39), controlPoint1: CGPoint(x: 87.67, y: 154.41), controlPoint2: CGPoint(x: 89.19, y: 139.49))
        bezier4Path.addCurve(to: CGPoint(x: 104.68, y: 123.33), controlPoint1: CGPoint(x: 93.02, y: 131.82), controlPoint2: CGPoint(x: 101.72, y: 125.44))
        bezier4Path.addCurve(to: CGPoint(x: 105.29, y: 122.94), controlPoint1: CGPoint(x: 104.86, y: 123.18), controlPoint2: CGPoint(x: 105.06, y: 123.04))
        bezier4Path.addCurve(to: CGPoint(x: 105.69, y: 122.77), controlPoint1: CGPoint(x: 105.42, y: 122.87), controlPoint2: CGPoint(x: 105.55, y: 122.81))
        bezier4Path.addCurve(to: CGPoint(x: 108.14, y: 122.96), controlPoint1: CGPoint(x: 106.5, y: 122.5), controlPoint2: CGPoint(x: 107.38, y: 122.55))
        bezier4Path.addCurve(to: CGPoint(x: 108.77, y: 123.4), controlPoint1: CGPoint(x: 108.37, y: 123.08), controlPoint2: CGPoint(x: 108.58, y: 123.23))
        bezier4Path.addCurve(to: CGPoint(x: 122.13, y: 135.39), controlPoint1: CGPoint(x: 111.83, y: 125.58), controlPoint2: CGPoint(x: 120.37, y: 131.86))
        bezier4Path.addCurve(to: CGPoint(x: 125.38, y: 158.84), controlPoint1: CGPoint(x: 124.18, y: 139.51), controlPoint2: CGPoint(x: 125.7, y: 154.42))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 146.83, y: 137.39))
        bezier4Path.addCurve(to: CGPoint(x: 145.23, y: 137.44), controlPoint1: CGPoint(x: 146.37, y: 137.42), controlPoint2: CGPoint(x: 145.84, y: 137.44))
        bezier4Path.addCurve(to: CGPoint(x: 123.38, y: 134.14), controlPoint1: CGPoint(x: 140.01, y: 137.44), controlPoint2: CGPoint(x: 127.19, y: 136.04))
        bezier4Path.addCurve(to: CGPoint(x: 111.33, y: 120.7), controlPoint1: CGPoint(x: 119.81, y: 132.36), controlPoint2: CGPoint(x: 113.44, y: 123.67))
        bezier4Path.addCurve(to: CGPoint(x: 111.06, y: 120.33), controlPoint1: CGPoint(x: 111.23, y: 120.58), controlPoint2: CGPoint(x: 111.15, y: 120.46))
        bezier4Path.addCurve(to: CGPoint(x: 110.62, y: 118.32), controlPoint1: CGPoint(x: 110.68, y: 119.71), controlPoint2: CGPoint(x: 110.54, y: 119))
        bezier4Path.addCurve(to: CGPoint(x: 110.97, y: 117.24), controlPoint1: CGPoint(x: 110.67, y: 117.94), controlPoint2: CGPoint(x: 110.78, y: 117.58))
        bezier4Path.addCurve(to: CGPoint(x: 111.35, y: 116.67), controlPoint1: CGPoint(x: 111.08, y: 117.03), controlPoint2: CGPoint(x: 111.2, y: 116.85))
        bezier4Path.addCurve(to: CGPoint(x: 123.38, y: 103.25), controlPoint1: CGPoint(x: 113.48, y: 113.68), controlPoint2: CGPoint(x: 119.83, y: 105.03))
        bezier4Path.addCurve(to: CGPoint(x: 145.21, y: 99.95), controlPoint1: CGPoint(x: 127.19, y: 101.34), controlPoint2: CGPoint(x: 139.99, y: 99.95))
        bezier4Path.addCurve(to: CGPoint(x: 146.84, y: 100), controlPoint1: CGPoint(x: 145.83, y: 99.95), controlPoint2: CGPoint(x: 146.36, y: 99.97))
        bezier4Path.addCurve(to: CGPoint(x: 156.2, y: 118.68), controlPoint1: CGPoint(x: 156.19, y: 100.66), controlPoint2: CGPoint(x: 156.19, y: 113.29))
        bezier4Path.addCurve(to: CGPoint(x: 146.83, y: 137.39), controlPoint1: CGPoint(x: 156.19, y: 124.1), controlPoint2: CGPoint(x: 156.19, y: 136.72))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 190.89, y: 232.28))
        bezier4Path.addCurve(to: CGPoint(x: 157.52, y: 198.91), controlPoint1: CGPoint(x: 172.49, y: 232.28), controlPoint2: CGPoint(x: 157.52, y: 217.31))
        bezier4Path.addCurve(to: CGPoint(x: 190.89, y: 165.53), controlPoint1: CGPoint(x: 157.52, y: 180.5), controlPoint2: CGPoint(x: 172.49, y: 165.53))
        bezier4Path.addCurve(to: CGPoint(x: 224.27, y: 198.91), controlPoint1: CGPoint(x: 209.3, y: 165.53), controlPoint2: CGPoint(x: 224.27, y: 180.5))
        bezier4Path.addCurve(to: CGPoint(x: 190.89, y: 232.28), controlPoint1: CGPoint(x: 224.27, y: 217.31), controlPoint2: CGPoint(x: 209.3, y: 232.28))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 287.18, y: 223.97))
        bezier4Path.addCurve(to: CGPoint(x: 252.52, y: 189.31), controlPoint1: CGPoint(x: 268.06, y: 223.97), controlPoint2: CGPoint(x: 252.52, y: 208.42))
        bezier4Path.addCurve(to: CGPoint(x: 287.18, y: 154.65), controlPoint1: CGPoint(x: 252.52, y: 170.2), controlPoint2: CGPoint(x: 268.06, y: 154.65))
        bezier4Path.addCurve(to: CGPoint(x: 321.84, y: 189.31), controlPoint1: CGPoint(x: 306.29, y: 154.65), controlPoint2: CGPoint(x: 321.84, y: 170.2))
        bezier4Path.addCurve(to: CGPoint(x: 287.18, y: 223.97), controlPoint1: CGPoint(x: 321.84, y: 208.42), controlPoint2: CGPoint(x: 306.29, y: 223.97))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 466.5, y: 53.4))
        bezier4Path.addCurve(to: CGPoint(x: 489.7, y: 76.6), controlPoint1: CGPoint(x: 479.29, y: 53.4), controlPoint2: CGPoint(x: 489.7, y: 63.81))
        bezier4Path.addCurve(to: CGPoint(x: 466.5, y: 99.8), controlPoint1: CGPoint(x: 489.7, y: 89.39), controlPoint2: CGPoint(x: 479.29, y: 99.8))
        bezier4Path.addCurve(to: CGPoint(x: 443.3, y: 76.6), controlPoint1: CGPoint(x: 453.71, y: 99.8), controlPoint2: CGPoint(x: 443.3, y: 89.39))
        bezier4Path.addCurve(to: CGPoint(x: 466.5, y: 53.4), controlPoint1: CGPoint(x: 443.3, y: 63.81), controlPoint2: CGPoint(x: 453.71, y: 53.4))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 394.1, y: 55.93))
        bezier4Path.addCurve(to: CGPoint(x: 405.32, y: 44.71), controlPoint1: CGPoint(x: 394.1, y: 49.74), controlPoint2: CGPoint(x: 399.13, y: 44.71))
        bezier4Path.addCurve(to: CGPoint(x: 416.54, y: 55.93), controlPoint1: CGPoint(x: 411.51, y: 44.71), controlPoint2: CGPoint(x: 416.54, y: 49.74))
        bezier4Path.addLine(to: CGPoint(x: 416.54, y: 69.63))
        bezier4Path.addCurve(to: CGPoint(x: 405.32, y: 80.85), controlPoint1: CGPoint(x: 416.54, y: 75.82), controlPoint2: CGPoint(x: 411.51, y: 80.85))
        bezier4Path.addCurve(to: CGPoint(x: 394.1, y: 69.63), controlPoint1: CGPoint(x: 399.13, y: 80.85), controlPoint2: CGPoint(x: 394.1, y: 75.82))
        bezier4Path.addLine(to: CGPoint(x: 394.1, y: 55.93))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 378.48, y: 232.28))
        bezier4Path.addCurve(to: CGPoint(x: 345.1, y: 198.91), controlPoint1: CGPoint(x: 360.07, y: 232.28), controlPoint2: CGPoint(x: 345.1, y: 217.31))
        bezier4Path.addCurve(to: CGPoint(x: 378.48, y: 165.53), controlPoint1: CGPoint(x: 345.1, y: 180.5), controlPoint2: CGPoint(x: 360.07, y: 165.53))
        bezier4Path.addCurve(to: CGPoint(x: 411.85, y: 198.91), controlPoint1: CGPoint(x: 396.88, y: 165.53), controlPoint2: CGPoint(x: 411.85, y: 180.5))
        bezier4Path.addCurve(to: CGPoint(x: 378.48, y: 232.28), controlPoint1: CGPoint(x: 411.85, y: 217.31), controlPoint2: CGPoint(x: 396.88, y: 232.28))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 426.41, y: 139.89))
        bezier4Path.addCurve(to: CGPoint(x: 403.21, y: 116.69), controlPoint1: CGPoint(x: 413.62, y: 139.89), controlPoint2: CGPoint(x: 403.21, y: 129.48))
        bezier4Path.addCurve(to: CGPoint(x: 426.41, y: 93.49), controlPoint1: CGPoint(x: 403.21, y: 103.9), controlPoint2: CGPoint(x: 413.62, y: 93.49))
        bezier4Path.addCurve(to: CGPoint(x: 449.61, y: 116.69), controlPoint1: CGPoint(x: 439.2, y: 93.49), controlPoint2: CGPoint(x: 449.61, y: 103.9))
        bezier4Path.addCurve(to: CGPoint(x: 426.41, y: 139.89), controlPoint1: CGPoint(x: 449.61, y: 129.48), controlPoint2: CGPoint(x: 439.2, y: 139.89))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 466.5, y: 179.98))
        bezier4Path.addCurve(to: CGPoint(x: 443.3, y: 156.78), controlPoint1: CGPoint(x: 453.71, y: 179.98), controlPoint2: CGPoint(x: 443.3, y: 169.57))
        bezier4Path.addCurve(to: CGPoint(x: 466.5, y: 133.58), controlPoint1: CGPoint(x: 443.3, y: 143.99), controlPoint2: CGPoint(x: 453.71, y: 133.58))
        bezier4Path.addCurve(to: CGPoint(x: 489.7, y: 156.78), controlPoint1: CGPoint(x: 479.29, y: 133.58), controlPoint2: CGPoint(x: 489.7, y: 143.99))
        bezier4Path.addCurve(to: CGPoint(x: 466.5, y: 179.98), controlPoint1: CGPoint(x: 489.7, y: 169.57), controlPoint2: CGPoint(x: 479.29, y: 179.98))
        bezier4Path.close()
        bezier4Path.move(to: CGPoint(x: 506.59, y: 139.89))
        bezier4Path.addCurve(to: CGPoint(x: 483.39, y: 116.69), controlPoint1: CGPoint(x: 493.8, y: 139.89), controlPoint2: CGPoint(x: 483.39, y: 129.48))
        bezier4Path.addCurve(to: CGPoint(x: 506.59, y: 93.49), controlPoint1: CGPoint(x: 483.39, y: 103.9), controlPoint2: CGPoint(x: 493.8, y: 93.49))
        bezier4Path.addCurve(to: CGPoint(x: 529.79, y: 116.69), controlPoint1: CGPoint(x: 519.38, y: 93.49), controlPoint2: CGPoint(x: 529.79, y: 103.9))
        bezier4Path.addCurve(to: CGPoint(x: 506.59, y: 139.89), controlPoint1: CGPoint(x: 529.79, y: 129.48), controlPoint2: CGPoint(x: 519.38, y: 139.89))
        bezier4Path.close()
        fillColor2.setFill()
        bezier4Path.fill()


        //// Oval 6 Drawing
        let oval6Path = UIBezierPath(ovalIn: CGRect(x: 409.33, y: 99.61, width: 34.16, height: 34.16))
        xColor.setFill()
        oval6Path.fill()


        //// Oval 7 Drawing
        let oval7Path = UIBezierPath(ovalIn: CGRect(x: 449.42, y: 139.69, width: 34.16, height: 34.16))
        aColor.setFill()
        oval7Path.fill()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: 163.95, y: 50.85, width: 10.2, height: 23.9), cornerRadius: 5)
        optionsColor.setFill()
        rectangle2Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 106.69, y: 129.44))
        bezier5Path.addCurve(to: CGPoint(x: 96.72, y: 138.12), controlPoint1: CGPoint(x: 102.11, y: 132.8), controlPoint2: CGPoint(x: 97.4, y: 136.76))
        bezier5Path.addCurve(to: CGPoint(x: 94.09, y: 158.4), controlPoint1: CGPoint(x: 95.49, y: 140.58), controlPoint2: CGPoint(x: 93.77, y: 153.84))
        bezier5Path.addCurve(to: CGPoint(x: 106.66, y: 162.08), controlPoint1: CGPoint(x: 94.26, y: 160.83), controlPoint2: CGPoint(x: 98.5, y: 162.08))
        bezier5Path.addLine(to: CGPoint(x: 106.71, y: 165.14))
        bezier5Path.addLine(to: CGPoint(x: 106.71, y: 162.08))
        bezier5Path.addCurve(to: CGPoint(x: 119.28, y: 158.4), controlPoint1: CGPoint(x: 114.88, y: 162.08), controlPoint2: CGPoint(x: 119.1, y: 160.84))
        bezier5Path.addCurve(to: CGPoint(x: 116.66, y: 138.12), controlPoint1: CGPoint(x: 119.61, y: 153.85), controlPoint2: CGPoint(x: 117.89, y: 140.59))
        bezier5Path.addCurve(to: CGPoint(x: 106.69, y: 129.44), controlPoint1: CGPoint(x: 116.03, y: 136.88), controlPoint2: CGPoint(x: 111.66, y: 133.1))
        bezier5Path.close()
        downColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 87.26, y: 108.73))
        bezier6Path.addCurve(to: CGPoint(x: 68.17, y: 106.07), controlPoint1: CGPoint(x: 85.08, y: 107.63), controlPoint2: CGPoint(x: 73.83, y: 106.07))
        bezier6Path.addCurve(to: CGPoint(x: 66.99, y: 106.11), controlPoint1: CGPoint(x: 67.72, y: 106.07), controlPoint2: CGPoint(x: 67.32, y: 106.08))
        bezier6Path.addCurve(to: CGPoint(x: 63.3, y: 118.68), controlPoint1: CGPoint(x: 64.54, y: 106.28), controlPoint2: CGPoint(x: 63.3, y: 110.51))
        bezier6Path.addCurve(to: CGPoint(x: 66.99, y: 131.29), controlPoint1: CGPoint(x: 63.3, y: 126.89), controlPoint2: CGPoint(x: 64.54, y: 131.11))
        bezier6Path.addCurve(to: CGPoint(x: 68.14, y: 131.33), controlPoint1: CGPoint(x: 67.32, y: 131.32), controlPoint2: CGPoint(x: 67.7, y: 131.33))
        bezier6Path.addCurve(to: CGPoint(x: 87.26, y: 128.67), controlPoint1: CGPoint(x: 73.82, y: 131.33), controlPoint2: CGPoint(x: 85.07, y: 129.76))
        bezier6Path.addCurve(to: CGPoint(x: 95.93, y: 118.7), controlPoint1: CGPoint(x: 88.62, y: 127.99), controlPoint2: CGPoint(x: 92.57, y: 123.27))
        bezier6Path.addCurve(to: CGPoint(x: 87.26, y: 108.73), controlPoint1: CGPoint(x: 92.28, y: 113.72), controlPoint2: CGPoint(x: 88.5, y: 109.35))
        bezier6Path.close()
        leftColor.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 106.69, y: 107.94))
        bezier7Path.addCurve(to: CGPoint(x: 116.66, y: 99.27), controlPoint1: CGPoint(x: 111.66, y: 104.3), controlPoint2: CGPoint(x: 116.03, y: 100.51))
        bezier7Path.addCurve(to: CGPoint(x: 119.28, y: 79), controlPoint1: CGPoint(x: 117.89, y: 96.81), controlPoint2: CGPoint(x: 119.6, y: 83.54))
        bezier7Path.addCurve(to: CGPoint(x: 106.71, y: 75.31), controlPoint1: CGPoint(x: 119.1, y: 76.55), controlPoint2: CGPoint(x: 114.88, y: 75.31))
        bezier7Path.addCurve(to: CGPoint(x: 94.09, y: 79), controlPoint1: CGPoint(x: 98.5, y: 75.31), controlPoint2: CGPoint(x: 94.27, y: 76.55))
        bezier7Path.addCurve(to: CGPoint(x: 96.72, y: 99.27), controlPoint1: CGPoint(x: 93.77, y: 83.54), controlPoint2: CGPoint(x: 95.49, y: 96.82))
        bezier7Path.addCurve(to: CGPoint(x: 106.69, y: 107.94), controlPoint1: CGPoint(x: 97.39, y: 100.62), controlPoint2: CGPoint(x: 102.11, y: 104.58))
        bezier7Path.close()
        upColor.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 146.39, y: 106.11))
        bezier8Path.addCurve(to: CGPoint(x: 145.21, y: 106.07), controlPoint1: CGPoint(x: 146.05, y: 106.08), controlPoint2: CGPoint(x: 145.65, y: 106.07))
        bezier8Path.addCurve(to: CGPoint(x: 126.11, y: 108.73), controlPoint1: CGPoint(x: 139.53, y: 106.07), controlPoint2: CGPoint(x: 128.29, y: 107.63))
        bezier8Path.addCurve(to: CGPoint(x: 117.44, y: 118.7), controlPoint1: CGPoint(x: 124.87, y: 109.35), controlPoint2: CGPoint(x: 121.09, y: 113.72))
        bezier8Path.addCurve(to: CGPoint(x: 126.11, y: 128.67), controlPoint1: CGPoint(x: 120.8, y: 123.27), controlPoint2: CGPoint(x: 124.75, y: 127.99))
        bezier8Path.addCurve(to: CGPoint(x: 146.39, y: 131.29), controlPoint1: CGPoint(x: 128.47, y: 129.84), controlPoint2: CGPoint(x: 141.64, y: 131.63))
        bezier8Path.addCurve(to: CGPoint(x: 150.08, y: 118.72), controlPoint1: CGPoint(x: 148.83, y: 131.12), controlPoint2: CGPoint(x: 150.07, y: 126.89))
        bezier8Path.addCurve(to: CGPoint(x: 146.39, y: 106.11), controlPoint1: CGPoint(x: 150.07, y: 110.51), controlPoint2: CGPoint(x: 148.83, y: 106.28))
        bezier8Path.close()
        rightColor.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: 194.94, y: 42.17))
        bezier9Path.addLine(to: CGPoint(x: 194.94, y: 124.79))
        bezier9Path.addCurve(to: CGPoint(x: 204.94, y: 134.79), controlPoint1: CGPoint(x: 194.94, y: 130.3), controlPoint2: CGPoint(x: 199.42, y: 134.79))
        bezier9Path.addLine(to: CGPoint(x: 369.42, y: 134.79))
        bezier9Path.addCurve(to: CGPoint(x: 379.41, y: 124.79), controlPoint1: CGPoint(x: 374.92, y: 134.79), controlPoint2: CGPoint(x: 379.41, y: 130.31))
        bezier9Path.addLine(to: CGPoint(x: 379.41, y: 42.17))
        bezier9Path.addCurve(to: CGPoint(x: 376.69, y: 35.37), controlPoint1: CGPoint(x: 379.41, y: 39.54), controlPoint2: CGPoint(x: 378.37, y: 37.15))
        bezier9Path.addLine(to: CGPoint(x: 197.66, y: 35.37))
        bezier9Path.addCurve(to: CGPoint(x: 194.94, y: 42.17), controlPoint1: CGPoint(x: 195.98, y: 37.15), controlPoint2: CGPoint(x: 194.94, y: 39.54))
        bezier9Path.close()
        fillColor2.setFill()
        bezier9Path.fill()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: 433, y: 27, width: 66, height: 8), cornerRadius: 4)
        rightSholderColor.setFill()
        rectangle3Path.fill()
        UIColor.white.setStroke()
        rectangle3Path.lineWidth = 2.5
        rectangle3Path.stroke()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: 77, y: 27, width: 66, height: 8), cornerRadius: 4)
        leftSholderColor.setFill()
        rectangle4Path.fill()
        UIColor.white.setStroke()
        rectangle4Path.lineWidth = 2.5
        rectangle4Path.stroke()
        
        context.restoreGState()

    }

    //// Generated Images

    @objc dynamic public class func imageOfPs4Controller(active: Bool = true, menuPressed: Bool = true, optionsPressed: Bool = true, leftSholderPressed: Bool = true, rightSholderPressed: Bool = true, xPressed: Bool = true, yPressed: Bool = false, aPressed: Bool = false, bPressed: Bool = false, upPressed: Bool = false, downPressed: Bool = false, leftPressed: Bool = false, rightPressed: Bool = false, j1Pressed: Bool = false, j1H: CGFloat = 0.5, j1V: CGFloat = 0.5, j2Pressed: Bool = false, j2H: CGFloat = 0.5, j2V: CGFloat = 0.5) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 576, height: 388), false, 0)
            PS3StyleKit.drawPs4Controller(active: active, menuPressed: menuPressed, optionsPressed: optionsPressed, leftSholderPressed: leftSholderPressed, rightSholderPressed: rightSholderPressed, xPressed: xPressed, yPressed: yPressed, aPressed: aPressed, bPressed: bPressed, upPressed: upPressed, downPressed: downPressed, leftPressed: leftPressed, rightPressed: rightPressed, j1Pressed: j1Pressed, j1H: j1H, j1V: j1V, j2Pressed: j2Pressed, j2H: j2H, j2V: j2V)

        let imageOfPs4Controller = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfPs4Controller
    }




    @objc(PS3StyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
